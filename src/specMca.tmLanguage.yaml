$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: spec-mca
scopeName: source.spec-mca
patterns:
  - include: "#comment"
  - include: "#data-line"
repository:
  comment:
    begin: ^(#)
    beginCaptures:
      "1": { name: pupunctuation.comment.line.spec-mca }
    end: (?!<\\)$
    name: comment.line.number-sign.spec-mca
  data-line:
    begin: ^(?:(@A)\b\s+|\s*)?(?=\S)
    beginCaptures:
      "1": { name: keyword.other.data-line.spec-mca }
    end: (?!<\\)$
    name: meta.data-line.spec-mca
    patterns:
      - match: (\\)$
        name: keyword.other.line-continuation.spec-mca
      - include: "#literal-numeric"
  literal-numeric:
    patterns:
      - include: "#constant-nan"
      # - include: "#literal-numeric-hexagonal"
      # - include: "#literal-numeric-octal"
      - include: "#literal-numeric-decimal"
      - include: "#literal-numeric-fractional"
      - include: "#literal-numeric-invalid"
      - match: \S+
        name: invalid.illegal.unknown.spec-mca
  constant-nan:
    match: (?<=^|,|\s)(NaN|nan|NAN)(?=$|,|\s|\\$)
    name: constant.language.nan.spec-mca
  # literal-numeric-hexagonal:
  #   match: (?<=^|,|\s)(\+|-)?(0[xX])[0-9a-fA-F]+(?=$|,|\s|\\$)
  #   name: constant.numeric.integer.hexadecimal.spec-mca
  #   captures:
  #     "1": { name: keyword.operator.sign.spec-mca }
  #     "2": { name: keyword.other.integer.hexadecimal.spec-mca }
  # literal-numeric-octal:
  #   match: (?<=^|,|\s)(\+|-)?(0)[0-7]+(?=$|,|\s|\\$)
  #   name: constant.numeric.integer.octal.spec-mca
  #   captures:
  #     "1": { name: keyword.operator.sign.spec-mca }
  #     "2": { name: keyword.other.integer.otcal.spec-mca }
  literal-numeric-decimal:
    match: (?<=^|,|\s)(\+|-)?(0|[1-9][0-9]*)(?=$|,|\s|\\$)
    name: constant.numeric.integer.decimal.spec-mca
    captures:
      "1": { name: keyword.operator.sign.spec-mca }
  literal-numeric-fractional:
    patterns:
      - match: (?<=^|,|\s)(\+|-)?[0-9]+(?:\.[0-9]*)?(?:(e|E)(\+|-)?[0-9]+)?(?=$|,|\s|\\$)
        name: constant.numeric.float.spec-mca
        captures:
          "1": { name: keyword.operator.sign.spec-mca }
          # "2": { name: keyword.operator.scientific-notation.spec-mca }
          # "3": { name: keyword.operator.sign.spec-mca }
      - match: (?<=^|,|\s)(\+|-)?\.[0-9]+(?:(e|E)(\+|-)?[0-9]+)?(?=$|,|\s|\\$)
        name: constant.numeric.float.spec-mca
        captures:
          "1": { name: keyword.operator.sign.spec-mca }
          # "2": { name: keyword.operator.scientific-notation.spec-mca }
          # "3": { name: keyword.operator.sign.spec-mca }
  literal-numeric-invalid:
    match: (?<=^|,|\s)[0-9][\w.]*(?=$|,|\s|\\$)
    name: invalid.illegal.numeric.other.spec-mca
