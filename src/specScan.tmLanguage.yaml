$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: spec-scan
scopeName: source.spec-scan
patterns:
  - include: "#information-line"
  - include: "#literal-numeric"
repository:
  information-line:
    patterns:
      - match: ^(#F) (.*)$
        # name: markup.heading.file.spec-scan
        name: meta.information-line.file.spec-scan
        captures:
          # "1": { name: support.type.information-line.file.spec-scan }
          "1": { name: markup.heading.file.spec-scan }
          "2": { name: string.other.file.spec-scan }
      - match: ^(#S) (.*)$
        # name: markup.heading.scan.spec-scan
        name: meta.information-line.scan.spec-scan
        captures:
          # "1": { name: support.type.information-line.scan.spec-scan }
          "1": { name: markup.heading.file.spec-scan }
          "2": { name: string.other.file.spec-scan }
      - match: ^(#D) (.*)$
        name: meta.information-line.date.spec-scan
        captures:
          # "1": { name: support.type.information-line.date.spec-scan }
          "1": { name: markup.heading.date.spec-scan }
          "2": { name: string.other.date.spec-scan }
      - match: ^(#C) (.*)$
        name: meta.information-line.comment.spec-scan
        captures:
          # "1": { name: support.type.information-line.comment.spec-scan }
          "1": { name: markup.heading.comment.spec-scan }
          "2": { name: string.other.comment.spec-scan }
      - match: ^(#(?:[OJ][0-9]+|L)) (.*)$
        name: meta.information-line.name-list.spec-scan
        captures:
          # "1": { name: support.type.information-line.name-list.spec-scan }
          "1": { name: markup.heading.name-list.spec-scan }
          "2": { patterns: [{ include: "#name-list" }] }
      - match: ^(#[oj][0-9]+) (.*)$
        name: meta.information-line.mnemonic-list.spec-scan
        captures:
          # "1": { name: support.type.information-line.mnemonic-list.spec-scan }
          "1": { name: markup.heading.mnemonic-list.spec-scan }
          "2": { patterns: [{ include: "#mnemonic-list" }] }
      - match: ^(#[A-Za-z][0-9]*)(?:\s(.*))?$
        name: meta.information-line.other.spec-scan
        captures:
          # "1": { name: support.type.information-line.other.spec-scan }
          "1": { name: markup.heading.other.spec-scan }
          "2": { patterns: [{ include: "#literal-numeric" }] }
  literal-numeric:
    patterns:
      # - include: "#literal-numeric-hexagonal"
      # - include: "#literal-numeric-octal"
      - include: "#literal-numeric-decimal"
      - include: "#literal-numeric-fractional"
      # - include: "#literal-numeric-invalid"
  literal-numeric-hexagonal:
    match: \b(?<!\.)(0[xX])[0-9a-fA-F]+(?![\.\w])
    name: constant.numeric.integer.hexadecimal.spec-scan
    captures:
      "1": { name: keyword.other.integer.hexadecimal.spec-scan }
  literal-numeric-octal:
    match: \b(?<!\.)(0)[0-7]+(?![\.\w])
    name: constant.numeric.integer.octal.spec-scan
    captures:
      "1": { name: keyword.other.integer.otcal.spec-scan }
  literal-numeric-decimal:
    match: \b(?<!\.)(0|[1-9][0-9]*)(?![\.\w])
    name: constant.numeric.integer.decimal.spec-scan
  literal-numeric-fractional:
    patterns:
      - match: \b(?<!\.)[0-9]+(?:\.[0-9]*)?(?:(e|E)[+-]?[0-9]+)?(?![\.\w])
        name: constant.numeric.float.spec-scan
        # captures:
        #   "1": { name: keyword.other.float.scientific-notation.spec-scan }
      - match: (?<!\w)\.[0-9]+(?:(e|E)[+-]?[0-9]+)?(?![\.\w])
        name: constant.numeric.float.spec-scan
        # captures:
        #   "1": { name: keyword.other.float.scientific-notation.spec-scan }
  literal-numeric-invalid:
    match: \b[0-9][\w.]*
    name: invalid.illegal.numeric.other.spec-scan
  name-list:
    match: \b[^ ].*?(?=  |$)
    name: entity.name.other.name.spec-scan
    captures:
      "0": { name: markup.underline.spec-scan }
  mnemonic-list:
    match: \b[a-zA-Z_][a-zA-Z0-9_]*\b
    name: entity.name.variable.mnemonic.spec-scan
